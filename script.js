// –û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let currentProgress = 0;
let isLoading = true;
let currentSection = 'market';

// –ú–∞—Ç—Ä–∏—á–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç
function initMatrix() {
    const canvas = document.getElementById('matrixCanvas');
    const ctx = canvas.getContext('2d');
    
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ canvas
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
    
    const chars = "01„Ç¢„Ç§„Ç¶„Ç®„Ç™„Ç´„Ç≠„ÇØ„Ç±„Ç≥„Çµ„Ç∑„Çπ„Çª„ÇΩ„Çø„ÉÅ„ÉÑ„ÉÜ„Éà„Éä„Éã„Éå„Éç„Éé„Éè„Éí„Éï„Éò„Éõ„Éû„Éü„É†„É°„É¢„É§„É¶„É®„É©„É™„É´„É¨„É≠„ÉØ„É≤„É≥";
    const charArray = chars.split("");
    const fontSize = 14;
    const columns = canvas.width / fontSize;
    const drops = [];
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–ø–µ–ª—å
    for (let i = 0; i < columns; i++) {
        drops[i] = Math.floor(Math.random() * canvas.height / fontSize);
    }
    
    function draw() {
        // –ü–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π —á–µ—Ä–Ω—ã–π –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ —Å–ª–µ–¥–∞
        ctx.fillStyle = "rgba(10, 10, 10, 0.04)";
        ctx.fillRect(0, 0, canvas.width, canvas.height);
        
        ctx.fillStyle = "#00ff9d";
        ctx.font = `${fontSize}px 'JetBrains Mono'`;
        
        for (let i = 0; i < drops.length; i++) {
            const text = charArray[Math.floor(Math.random() * charArray.length)];
            ctx.fillText(text, i * fontSize, drops[i] * fontSize);
            
            // –°–ª—É—á–∞–π–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏
            if (drops[i] * fontSize > canvas.height && Math.random() > 0.975) {
                drops[i] = 0;
            }
            drops[i]++;
        }
    }
    
    setInterval(draw, 33);
}

// –ß–∞—Å—Ç–∏—Ü—ã –¥–ª—è —Ñ–æ–Ω–∞
function initParticles() {
    const container = document.getElementById('particles');
    const particleCount = 50;
    
    for (let i = 0; i < particleCount; i++) {
        createParticle(container);
    }
    
    function createParticle(parent) {
        const particle = document.createElement('div');
        particle.className = 'particle';
        
        // –°–ª—É—á–∞–π–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
        const size = Math.random() * 3 + 1;
        const posX = Math.random() * 100;
        const posY = Math.random() * 100;
        const duration = Math.random() * 20 + 10;
        const delay = Math.random() * 5;
        
        particle.style.cssText = `
            position: absolute;
            width: ${size}px;
            height: ${size}px;
            background: #00ff9d;
            border-radius: 50%;
            left: ${posX}%;
            top: ${posY}%;
            opacity: ${Math.random() * 0.3 + 0.1};
            animation: floatParticle ${duration}s linear ${delay}s infinite;
        `;
        
        parent.appendChild(particle);
        
        // –£–¥–∞–ª—è–µ–º —á–∞—Å—Ç–∏—Ü—É –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é
        setTimeout(() => {
            particle.remove();
            createParticle(parent);
        }, (duration + delay) * 1000);
    }
}

// –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
function simulateLoading() {
    const progressFill = document.getElementById('progressFill');
    const progressText = document.getElementById('progressText');
    const steps = [
        { percent: 15, text: "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞—â–∏—â–µ–Ω–Ω–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è..." },
        { percent: 30, text: "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —É–∑–ª–∞–º Tor..." },
        { percent: 50, text: "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è AES-256..." },
        { percent: 70, text: "–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..." },
        { percent: 85, text: "–ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞..." },
        { percent: 100, text: "–ì–æ—Ç–æ–≤–æ! –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ..." }
    ];
    
    let currentStep = 0;
    
    function nextStep() {
        if (currentStep < steps.length) {
            const step = steps[currentStep];
            progressFill.style.width = step.percent + '%';
            progressText.textContent = step.text;
            currentStep++;
            
            const delay = currentStep === steps.length ? 1500 : Math.random() * 800 + 400;
            setTimeout(nextStep, delay);
        } else {
            completeLoading();
        }
    }
    
    nextStep();
}

// –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
function completeLoading() {
    const loadingScreen = document.getElementById('loadingScreen');
    const mainInterface = document.getElementById('mainInterface');
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
    loadingScreen.style.opacity = '0';
    loadingScreen.style.transition = 'opacity 0.8s ease';
    
    setTimeout(() => {
        loadingScreen.classList.add('hidden');
        mainInterface.classList.remove('hidden');
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        initMainInterface();
    }, 800);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
function initMainInterface() {
    initNavigation();
    initProductFilters();
    initBuyButtons();
    updateMarketStats();
    startLiveUpdates();
}

// –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º
function initNavigation() {
    const navItems = document.querySelectorAll('.sidebar-nav .nav-item');
    const contentSections = document.querySelectorAll('.content-section');
    
    navItems.forEach(item => {
        item.addEventListener('click', (e) => {
            e.preventDefault();
            
            // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            navItems.forEach(nav => nav.classList.remove('active'));
            contentSections.forEach(section => section.classList.remove('active'));
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Ç–µ–∫—É—â–µ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
            item.classList.add('active');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Å–µ–∫—Ü–∏—é
            const sectionId = item.getAttribute('data-section') + 'Section';
            const targetSection = document.getElementById(sectionId);
            if (targetSection) {
                targetSection.classList.add('active');
                currentSection = item.getAttribute('data-section');
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
                updateSectionTitle(item.textContent.trim());
            }
        });
    });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å–µ–∫—Ü–∏–∏
function updateSectionTitle(title) {
    const titleElement = document.getElementById('sectionTitle');
    titleElement.textContent = title;
}

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤
function initProductFilters() {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const productCards = document.querySelectorAll('.product-card');
    
    filterButtons.forEach(button => {
        button.addEventListener('click', () => {
            // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
            filterButtons.forEach(btn => btn.classList.remove('active'));
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Ç–µ–∫—É—â–µ–π –∫–Ω–æ–ø–∫–µ
            button.classList.add('active');
            
            const category = button.getAttribute('data-category');
            
            // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤
            productCards.forEach(card => {
                if (category === 'all' || card.getAttribute('data-category') === category) {
                    card.style.display = 'block';
                    setTimeout(() => {
                        card.style.opacity = '1';
                        card.style.transform = 'translateY(0)';
                    }, 50);
                } else {
                    card.style.opacity = '0';
                    card.style.transform = 'translateY(20px)';
                    setTimeout(() => {
                        card.style.display = 'none';
                    }, 300);
                }
            });
        });
    });
}

// –ö–Ω–æ–ø–∫–∏ –ø–æ–∫—É–ø–∫–∏
function initBuyButtons() {
    const buyButtons = document.querySelectorAll('.buy-btn');
    
    buyButtons.forEach(button => {
        button.addEventListener('click', () => {
            const productName = button.getAttribute('data-product');
            openPurchaseModal(productName);
        });
    });
}

// –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–∫—É–ø–∫–∏
function openPurchaseModal(productName) {
    const modal = document.getElementById('purchaseModal');
    const modalContent = modal.querySelector('.modal-content');
    
    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    modalContent.innerHTML = `
        <div class="purchase-details">
            <div class="product-summary">
                <h3>${productName}</h3>
                <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏ –ø–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π</p>
            </div>
            
            <div class="delivery-info">
                <h4>üì¶ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ</h4>
                <div class="info-grid">
                    <div class="info-item">
                        <i class="fas fa-clock"></i>
                        <span>–°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏: 7-14 –¥–Ω–µ–π</span>
                    </div>
                    <div class="info-item">
                        <i class="fas fa-shield-alt"></i>
                        <span>–°—Ç–µ–ø–µ–Ω—å –∑–∞—â–∏—Ç—ã: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è</span>
                    </div>
                    <div class="info-item">
                        <i class="fas fa-box"></i>
                        <span>–£–ø–∞–∫–æ–≤–∫–∞: –°—Ç–µ–ª—Å-—É–ø–∞–∫–æ–≤–∫–∞</span>
                    </div>
                </div>
            </div>
            
            <div class="payment-section">
                <h4>üí≥ –û–ø–ª–∞—Ç–∞</h4>
                <div class="crypto-address">
                    <label>BTC Address:</label>
                    <div class="address-container">
                        <code id="btcAddress">1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa</code>
                        <button class="copy-btn" onclick="copyToClipboard('btcAddress')">
                            <i class="fas fa-copy"></i>
                        </button>
                    </div>
                </div>
                <p class="payment-warning">
                    ‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ç–æ—á–Ω—É—é —Å—É–º–º—É! –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –∑–∞–∫—Ä–æ–π—Ç–µ —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É.
                </p>
            </div>
            
            <div class="contact-section">
                <h4>üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞</h4>
                <p>–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç ID –¥–ª—è —Å–≤—è–∑–∏:</p>
                <div class="telegram-id">
                    <code>@shadow_support_bot</code>
                    <button class="copy-btn" onclick="copyToClipboard('telegramId')">
                        <i class="fas fa-copy"></i>
                    </button>
                </div>
                <p class="contact-note">
                    –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
                </p>
            </div>
            
            <div class="modal-actions">
                <button class="btn-secondary" onclick="closeModal()">–û—Ç–º–µ–Ω–∞</button>
                <button class="btn-primary" onclick="confirmPurchase('${productName}')">
                    –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑
                </button>
            </div>
        </div>
    `;
    
    modal.classList.remove('hidden');
    document.body.style.overflow = 'hidden';
}

// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏
function confirmPurchase(productName) {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–∫–∞–∑–µ
    showNotification(`–ó–∞–∫–∞–∑ "${productName}" –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É`, 'success');
    closeModal();
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–¥–µ—Å—å
    setTimeout(() => {
        showNotification('–û–∂–∏–¥–∞–π—Ç–µ —Å–≤—è–∑–∏ –æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤ Telegram', 'info');
    }, 2000);
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeModal() {
    const modal = document.getElementById('purchaseModal');
    modal.classList.add('hidden');
    document.body.style.overflow = 'auto';
}

// –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
function copyToClipboard(elementId) {
    const element = document.getElementById(elementId);
    const text = element.textContent || element.innerText;
    
    navigator.clipboard.writeText(text).then(() => {
        showNotification('–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞', 'success');
    }).catch(() => {
        // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
        const textArea = document.createElement('textarea');
        textArea.value = text;
        document.body.appendChild(textArea);
        textArea.select();
        document.execCommand('copy');
        document.body.removeChild(textArea);
        showNotification('–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞', 'success');
    });
}

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function showNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.innerHTML = `
        <div class="notification-content">
            <i class="fas fa-${getNotificationIcon(type)}"></i>
            <span>${message}</span>
        </div>
    `;
    
    // –°—Ç–∏–ª–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: ${getNotificationColor(type)};
        color: white;
        padding: 15px 20px;
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.3);
        z-index: 3000;
        animation: slideInRight 0.3s ease;
        max-width: 400px;
    `;
    
    document.body.appendChild(notification);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
    setTimeout(() => {
        notification.style.animation = 'slideOutRight 0.3s ease';
        setTimeout(() => {
            notification.remove();
        }, 300);
    }, 3000);
}

function getNotificationIcon(type) {
    const icons = {
        success: 'check-circle',
        error: 'exclamation-circle',
        warning: 'exclamation-triangle',
        info: 'info-circle'
    };
    return icons[type] || 'info-circle';
}

function getNotificationColor(type) {
    const colors = {
        success: '#00ff9d',
        error: '#ff4444',
        warning: '#ffaa00',
        info: '#00ccff'
    };
    return colors[type] || '#00ccff';
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä—ã–Ω–∫–∞
function updateMarketStats() {
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω—ã BTC
    fetch('https://api.coindesk.com/v1/bpi/currentprice.json')
        .then(response => response.json())
        .then(data => {
            const price = Math.floor(data.bpi.USD.rate_float);
            document.getElementById('btcPrice').textContent = price.toLocaleString();
        })
        .catch(() => {
            // Fallback —Ü–µ–Ω–∞
            document.getElementById('btcPrice').textContent = '47,231';
        });
    
    // –°–ª—É—á–∞–π–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–Ω–ª–∞–π–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    updateOnlineUsers();
}

function updateOnlineUsers() {
    const userCountElement = document.getElementById('userCount');
    const current = parseInt(userCountElement.textContent.replace(',', '')) || 1847;
    const change = Math.floor(Math.random() * 50) - 20;
    const newCount = Math.max(1500, current + change);
    userCountElement.textContent = newCount.toLocaleString();
}

// –ñ–∏–≤—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
function startLiveUpdates() {
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–Ω–ª–∞–π–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    setInterval(updateOnlineUsers, 30000);
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω—ã BTC –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã
    setInterval(updateMarketStats, 120000);
    
    // –°–ª—É—á–∞–π–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
    setInterval(() => {
        if (Math.random() < 0.3) { // 30% —à–∞–Ω—Å
            const messages = [
                "–°–∏—Å—Ç–µ–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∞",
                "–ù–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥",
                "–ü—Ä–æ–≤–µ–¥–µ–Ω–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ",
                "–£–ª—É—á—à–µ–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–µ—Ç–∏"
            ];
            const randomMessage = messages[Math.floor(Math.random() * messages.length)];
            showNotification(randomMessage, 'info');
        }
    }, 60000);
}

// CSS –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
const notificationStyles = document.createElement('style');
notificationStyles.textContent = `
    @keyframes slideInRight {
        from { transform: translateX(100%); opacity: 0; }
        to { transform: translateX(0); opacity: 1; }
    }
    
    @keyframes slideOutRight {
        from { transform: translateX(0); opacity: 1; }
        to { transform: translateX(100%); opacity: 0; }
    }
    
    @keyframes floatParticle {
        0% { transform: translateY(0) rotate(0deg); opacity: 0; }
        10% { opacity: 0.3; }
        90% { opacity: 0.1; }
        100% { transform: translateY(-100vh) rotate(360deg); opacity: 0; }
    }
    
    .notification-content {
        display: flex;
        align-items: center;
        gap: 10px;
    }
    
    .notification-content i {
        font-size: 1.2em;
    }
`;
document.head.appendChild(notificationStyles);

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ CSS —Å—Ç–∏–ª–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
const modalStyles = document.createElement('style');
modalStyles.textContent = `
    .purchase-details {
        display: flex;
        flex-direction: column;
        gap: 25px;
    }
    
    .product-summary h3 {
        color: #00ff9d;
        margin-bottom: 5px;
        font-size: 1.3em;
    }
    
    .product-summary p {
        opacity: 0.8;
        font-size: 0.9em;
    }
    
    .delivery-info h4,
    .payment-section h4,
    .contact-section h4 {
        color: #00ccff;
        margin-bottom: 15px;
        font-size: 1.1em;
    }
    
    .info-grid {
        display: grid;
        gap: 10px;
    }
    
    .info-item {
        display: flex;
        align-items: center;
        gap: 10px;
        padding: 8px 12px;
        background: rgba(255, 255, 255, 0.05);
        border-radius: 6px;
        font-size: 0.9em;
    }
    
    .info-item i {
        color: #00ff9d;
        width: 16px;
    }
    
    .crypto-address {
        margin-bottom: 15px;
    }
    
    .crypto-address label {
        display: block;
        margin-bottom: 8px;
        font-weight: 600;
        color: #00ff9d;
    }
    
    .address-container {
        display: flex;
        align-items: center;
        gap: 10px;
        background: rgba(0, 0, 0, 0.3);
        padding: 12px 15px;
        border-radius: 8px;
        border: 1px solid rgba(0, 255, 157, 0.3);
    }
    
    .address-container code {
        flex: 1;
        font-family: 'JetBrains Mono', monospace;
        font-size: 0.9em;
        word-break: break-all;
    }
    
    .copy-btn {
        background: rgba(0, 255, 157, 0.2);
        border: 1px solid rgba(0, 255, 157, 0.5);
        color: #00ff9d;
        padding: 8px 12px;
        border-radius: 6px;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .copy-btn:hover {
        background: rgba(0, 255, 157, 0.3);
        transform: scale(1.05);
    }
    
    .payment-warning {
        background: rgba(255, 68, 68, 0.1);
        border: 1px solid rgba(255, 68, 68, 0.3);
        padding: 12px 15px;
        border-radius: 8px;
        font-size: 0.9em;
        color: #ff4444;
    }
    
    .telegram-id {
        display: flex;
        align-items: center;
        gap: 10px;
        background: rgba(0, 204, 255, 0.1);
        padding: 12px 15px;
        border-radius: 8px;
        margin: 10px 0;
        border: 1px solid rgba(0, 204, 255, 0.3);
    }
    
    .telegram-id code {
        flex: 1;
        font-family: 'JetBrains Mono', monospace;
        color: #00ccff;
    }
    
    .contact-note {
        font-size: 0.85em;
        opacity: 0.8;
        font-style: italic;
    }
    
    .modal-actions {
        display: flex;
        gap: 15px;
        justify-content: flex-end;
        margin-top: 20px;
    }
    
    .btn-primary {
        background: linear-gradient(135deg, #00ff9d, #00ccff);
        color: #0a0a0a;
        border: none;
        padding: 12px 25px;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 255, 157, 0.4);
    }
    
    .btn-secondary {
        background: rgba(255, 255, 255, 0.1);
        color: #e0e0e0;
        border: 1px solid rgba(255, 255, 255, 0.2);
        padding: 12px 25px;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .btn-secondary:hover {
        background: rgba(255, 255, 255, 0.2);
    }
`;
document.head.appendChild(modalStyles);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–∞—Ä–∫–Ω–µ—Ç–∞
if (document.getElementById('matrixCanvas')) {
    document.addEventListener('DOMContentLoaded', function() {
        initMatrix();
        initParticles();
        simulateLoading();
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –µ–≥–æ
        document.addEventListener('click', (e) => {
            if (e.target.id === 'purchaseModal') {
                closeModal();
            }
        });
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ ESC
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') {
                closeModal();
            }
        });
    });
}

// –î–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ñ–µ
if (document.getElementById('accessCode')) {
    document.addEventListener('DOMContentLoaded', function() {
        // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        const animatedElements = document.querySelectorAll('.cafe-header, .cafe-nav, .hero-section, .access-section');
        animatedElements.forEach((element, index) => {
            element.style.animation = `fadeIn 0.8s ease ${index * 0.2}s both`;
        });
    });
}
